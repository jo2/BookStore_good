plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.0"
    id "jacoco"
}

sonarqube {
    properties {
        property "sonar.projectKey", "BookStore_good"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "158c61a8429d745c4361d1e10c135bf8ef3e6717"
        property "sonar.jacoco.reportPath", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

group = 'de.adesso'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def activeProfile = 'dummy'
bootRun {
    systemProperty "spring.profiles.active", activeProfile
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/dto/**', '**/utilities/**', '**/entities/**'])
        }))
    }
}
test.finalizedBy jacocoTestReport

tasks.named('sonarqube').configure {
    dependsOn test
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.github.hakky54:logcaptor:2.7.0'
}

test {
    useJUnitPlatform()
}
